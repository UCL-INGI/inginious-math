
-------------------- Réaliser un exercice avec des paramètres random --------------------------


Choisir le type d'environnement "Docker container" et l'environnement de correction "math"

Créer un sous-problème de type "code(une seule ligne)"

1) L'énoncé de la question :

.. raw:: html

     Enoncé de la question, quand paramètre random, écrire <b><span id="ipr1"></span></b> avec l'id de la variable du paramètre.

Ecrire des :math:`x` dans le raw:: html ne fonctionne pas 

2) Sous la question :
  
.. raw:: html

   <script>

   a) Définir les variables des paramètres random :

          var nom_de_la_variable = parseInt(input["@random"][indice] * 100);   ----> Pour une variable random entre 0 et 100, l'indice doit être différent pour chaque variable sinon =
   
      Exemple :
   
          var somme = 10000*parseInt(input["@random"][0] * 100 + 1); -----> Pour une variable random entre 1 et 100, multipliée par 10000
          var plus2 = 1000*parseInt(input["@random"][1] * 100 + 1);

   b) Définir un ID pour chaque variable :
        
        document.getElementById("ID_choisi").innerHTML = nom_de_variable  ------> L'ID doit être différent pour chaque variable

      Exemple :
  
        document.getElementById("ipr1").innerHTML = somme;  -------> id établis à "ipr1" pour la variable "somme"

   </script>


Exemple d'énoncé :

.. raw:: html

    On veut partager une somme de <b><span id="ipr1"></span></b> entre trois héritiers, 
    de manière que le deuxième ait <b><span id="ipr2"></span></b> € de plus que le premier, 
    et le troisième <b><span id="ipr3"></span></b> € de moins que le deuxième.

On pose :math:`x` la part du premier. Ecrivez l'équation du premier degré.

.. raw:: html

   <script>
   var somme = 10000*parseInt(input["@random"][0] * 100 + 1);
   var plus2 = 1000*parseInt(input["@random"][1] * 100 + 1);
   var minus3 = 1000*parseInt(input["@random"][2] * 100 + 1);
   document.getElementById("ipr1").innerHTML = somme;
   document.getElementById("ipr2").innerHTML = plus2;
   document.getElementById("ipr3").innerHTML = minus3;

   </script>


3) Dans la partie "Fichier"

   Créer un fichier "run"

   Copier-coller un des fichier présent sur le GIT qui correspond au type de réponse attendue 

   Le modifier en suivant les commentaires




----------- Doc à modifier pour le point 3 -----------

Idées : Faire un fichier .py différent pour des types de réponses différentes : par exemple il n'y a pas besoin de parsing si la réponse n'est pas une équation
        Permettra de simplifier le processus et de ne pas surcharger les fichiers de commentaires
        Les profs n'auront qu'à 'piocher' le fichier qui correspond à ce qu'ils ont besoin sans devoir trop modifier  









